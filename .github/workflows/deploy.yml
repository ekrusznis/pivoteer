name: Deploy MyPivoteer

on:
  push:
    branches:
      - master # production
      - dev  # development
      - gh_secrets_env_integration  # testing just to verify mapping works

env:
  # Backend environment variables
  DB_URL: ${{ secrets.DB_URL }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  JWT_EXPIRATION: ${{ secrets.JWT_EXPIRATION }}
  STRIPE_PUBLIC_KEY: ${{ secrets.STRIPE_PUBLIC_KEY }}
  STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
  SPRING_MAIL_HOST: ${{ secrets.SPRING_MAIL_HOST }}
  SPRING_MAIL_PORT: ${{ secrets.SPRING_MAIL_PORT }}
  SPRING_MAIL_USERNAME: ${{ secrets.SPRING_MAIL_USERNAME }}
  SPRING_MAIL_PASSWORD: ${{ secrets.SPRING_MAIL_PASSWORD }}
  FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
  FRONTEND_PORT: ${{ secrets.FRONTEND_PORT }}
  BACKEND_PORT: ${{ secrets.BACKEND_PORT }}

  # Server
  DOCKER_HOST: ${{ secrets.DOCKER_HOST }}
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Build Frontend
        working-directory: ./frontend
        run: |
          npm install
          npm run build

      - name: Build Backend
        run: |
          ./gradlew clean build -p src

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.DOCKER_HOST }}
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          script: |
            cd /pivoteer # <-- UPDATE THIS to correct server folder
            git pull origin main
            docker compose down
            docker compose up --build -d

      - name: ðŸŽ‰ Deployment Done!
        run: echo "ðŸš€ Deployment successful!"
